{
  "openapi": "3.0.1",
  "info": {
    "title": "Service Oriented Architecture",
    "description": "Implementing a Service-Oriented Architecture (SOA), layered architecture with a fake JSON database to simulate authentication. With all necessary processes to guarantee security, organization, readability, maintainability and test-driven development.",
    "version": "1.0.0"
  },
  "basePath": "/",

  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "paths": {
    "/user/login": {
      "post": {
        "summary": "User login",
        "tags": ["Users"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "summary": "User signup",
        "tags": ["Users"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                },
                "required": ["email", "name", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully."
          },
          "400": {
            "description": "Bad request. Invalid input data."
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "Route to search for a user by _id",
        "summary": "Search for a user by _id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Route to update a user by _id",
        "summary": "Update a user by _id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "John"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },

      "delete": {
        "description": "Route to delete a user by _id",
        "summary": "Delete a user by _id",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    }
  }
}
